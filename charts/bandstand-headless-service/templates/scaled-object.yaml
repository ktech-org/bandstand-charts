{{- if ((.Values.advancedScaling).enabled) }}
{{- $relName := .Release.Name -}}
{{- if .Values.nameSuffix }}
{{- $relName = print .Release.Name "-" .Values.nameSuffix }}
{{- end }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ $relName }}
spec:
  cooldownPeriod: {{ (.Values.advancedScaling.cooldown) | default 30 }}
  maxReplicaCount: {{ (.Values.advancedScaling.maxReplicas) | default 3 }}
  minReplicaCount: {{ (.Values.advancedScaling.minReplicas) | default 1 }}
#  {{- if eq ((.Values.advancedScaling.idleReplicas) | default 0) 0 }}
#  idleReplicaCount: {{ ((.Values.advancedScaling).idleReplicas) | default 0 }}
#  {{- end }}
  scaleTargetRef:
    name: {{ $relName }}
  triggers:
  {{- range (.Values.advancedScaling).scalers }}
    {{- if eq .type "cron" }}
    - type: cron
      metadata:
        desiredReplicas: {{ quote (.desiredReplicas | default 1) }}
        start: {{ .start }}
        end: {{ .end }}
        timezone: UTC
    {{- end }}
    {{- if eq .type "cpu" }}
    - type: cpu
      metadata:
        value: {{ quote (.threshold | default 50) }}
      metricType: Utilization
    {{- end }}
    {{- if eq .type "memory" }}
    - type: memory
      metadata:
        value: {{ quote (.threshold | default 75) }}
      metricType: Utilization
    {{- end }}
    {{- if eq .type "msk" }}
    - type: kafka
      metadata:
        bootstrapServersFromEnv: {{ .bootstrapServersEnvVar | default "KAFKA_BROKERS" }}
        consumerGroup: {{ .consumerGroup }}
        topic:  {{ .topic }}
        lagThreshold: {{ .lagThreshold | default 10 | quote }}
        tls: {{ quote (.tls | default "enable") }}
    {{- end }}
    {{- if eq .type "confluent" }}
    - type: kafka
      metadata:
        bootstrapServersFromEnv: {{ .bootstrapServersEnvVar | default "KAFKA_BROKERS" }}
        consumerGroup: {{ .consumerGroup }}
        topic:  {{ .topic }}
        lagThreshold: {{ .lagThreshold | default 10 | quote }}
        tls: enable
        unsafeSsl: 'true'
      authenticationRef:
        name: keda-confluent-credentials
        kind: ClusterTriggerAuthentication
    {{- end }}
  {{- end }}
{{- end }}
