{{- $relName := .Release.Name -}}
{{- if .Values.nameSuffix }}
{{- $relName = print .Release.Name "-" .Values.nameSuffix }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $relName }}
  labels: {{- include "bandstand-headless-service.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "bandstand-headless-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- if (.Values.reloader).enabled }}
        reloader.stakater.com/auto: "true"
        {{- end }}
      labels: {{- include "bandstand-headless-service.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ $relName }}
      containers:
        - name: {{ $relName }}
          image: {{ .Values.dockerRegistry | default .Values.global.dockerRegistry | default "ktechartifacts-docker.jfrog.io" }}/{{ $.Values.imageName | default $relName }}:{{ .Values.global.image.tag }}
          imagePullPolicy: Always
          {{- $serverContainer := .Values.serverContainer | default dict }}
          {{- if $serverContainer.command }}
          command: {{ $serverContainer.command }}
          {{- end }}
          {{- if $serverContainer.arguments }}
          args:
          {{- range $serverContainer.arguments }}
          - {{ . }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
              readOnly: false
            {{- range .Values.config }}
            - name: config
              mountPath: {{ .path }}/{{ .filename }}
              subPath: {{ .filename }}
              readOnly: true
            {{- end }}
            {{- range .Values.envConfig }}
            - name: env-config
              mountPath: {{ .path }}/{{ .filename }}
              subPath: {{ .filename }}
              readOnly: true
            {{- end }}
            {{- if (.Values.volume).persistent }}
            - name: {{ $relName }}
              mountPath: "/var/{{ $relName }}"
            {{- end }}
          resources:
            requests:
              cpu: {{ (.Values.resources).requests.cpu | default "100m" }}
              memory: {{ (.Values.resources).requests.memory | default "512Mi" }}
              ephemeral-storage: {{ (.Values.resources).requests.ephemeralStorage | default "64Mi" }}
            limits:
              {{- if .Values.enforceCpuLimits }}
              cpu: {{ (.Values.resources).requests.cpu | default "100m" }}
              {{- end }}
              memory: {{ (.Values.resources).requests.memory | default "512Mi" }}
              ephemeral-storage: {{ (.Values.resources).requests.ephemeralStorage | default "64Mi" }}
          {{- if .Values.startupProbe }}
          startupProbe: {{ toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          env:
            - name: ENV
              value: {{ .Values.global.env }}
            - name: VERSION
              value: {{ .Values.global.image.tag }}
            - name: DD_ENV
              value: {{ .Values.global.env }}
            - name: DD_SERVICE
              value: {{ $relName }}
            - name: DD_VERSION
              value: {{ .Values.global.image.tag }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_SERVICE_NAME
              value: {{ $relName }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://collector.linkerd-jaeger:4317
            - name: OTEL_PROPAGATORS
              value: b3multi
            - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
              value: http://$(DD_AGENT_HOST):4317
            - name: OTEL_EXPORTER_OTLP_METRICS_PROTOCOL
              value: grpc
            - name: OTEL_METRICS_EXPORTER
              value: otlp
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: OTEL_LOGS_EXPORTER
              value: "none"
            - name: OTEL_JAVA_DISABLED_RESOURCE_PROVIDERS
              value: io.opentelemetry.sdk.extension.resources.HostResourceProvider,io.opentelemetry.sdk.extension.resources.ContainerResourceProvider
            - name: AWS_ACCOUNT_ID
              value: {{ .Values.global.aws.account | squote }}
            {{- if .Values.additionalEnvVars }}
              {{- .Values.additionalEnvVars | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 12 }}
            {{- end }}
            {{- if .Values.environmentEnvVars }}
              {{- .Values.environmentEnvVars | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 12 }}
            {{- end }}
          {{- if or (.Values.envFrom) (.Values.secrets) }}
          envFrom:
          {{- if .Values.envFrom }}
          {{- .Values.envFrom | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 12 }}
          {{- end }}
          {{- range .Values.secrets }}
          {{- $secretHash := sha256sum .secret | substr 0 6 }}
          {{- $secretName := list $.Release.Name $.Values.nameSuffix .name $secretHash | join "-" }}
          - secretRef:
              name: {{ $secretName }}
              optional: {{ .optional | default false }}
            {{- if .prefix }}
            prefix: {{ .prefix }}
            {{- end }}
          {{- end }}
          {{- end }}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret | default "rt-docker-config" }}
      volumes:
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ $relName }}
            items:
              {{- range .Values.config }}
              - key: {{ .filename }}
                path: {{ .filename }}
              {{- end }}
        {{- end }}
        {{- if .Values.envConfig }}
        - name: env-config
          configMap:
            name: {{ $relName }}-env
            items:
              {{- range .Values.envConfig }}
              - key: {{ .filename }}
                path: {{ .filename }}
              {{- end }}
        {{- end }}
        - name: tmp-dir
        {{- if (.Values.volume).ephemeral }}
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labels:
                  type: temp-volume
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "gp2"
                resources:
                  requests:
                    storage: {{ .Values.volume.ephemeral }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if (.Values.volume).persistent }}
        - name: {{ $relName }}
          persistentVolumeClaim:
            claimName: {{ $relName }}
        {{- end }}
      securityContext:
        fsGroup: 1000
        {{- if .Values.runAsUser }}
        runAsUser: {{ .Values.runAsUser | default 1000 }}
        {{- else }}
        runAsUser: 1000
        {{- end }}
