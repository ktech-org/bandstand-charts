{{- range .Values.testRuns }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ $.Release.Name }}-test-run-{{ .name }}
  labels:
    system-code: {{ default $.Release.Name $.Values.systemCode }}
    tags.datadoghq.com/service: {{ default $.Release.Name $.Values.systemCode }}
    {{- if $.Values.systemGroup }}
    system-group: {{$.Values.systemGroup }}
    {{- end }}
    git-repo: {{ default $.Release.Name $.Values.gitRepo }}
    provisioner: "Helm"
    application: {{ $.Release.Name }}-test-suite
    version: {{ $.Values.global.image.tag }}
    tags.datadoghq.com/version: {{ $.Values.global.image.tag }}
    environment: {{ $.Values.global.env }}
    tags.datadoghq.com/env: {{ $.Values.global.env }}
    owner: {{ $.Values.owner }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
    "polaris.fairwinds.com/readinessProbeMissing-exempt": "true"
    "polaris.fairwinds.com/livenessProbeMissing-exempt": "true"
    "linkerd.io/inject": disabled
    "botkube.io/disable": "true"
spec:
  serviceAccountName: {{ $.Release.Name }}
  containers:
    - name: {{ $.Release.Name }}
      image: {{ $.Values.dockerRegistry | default $.Values.global.dockerRegistry | default "ktechartifacts-docker.jfrog.io" }}/{{ $.Values.imageName | default $.Release.Name }}:{{ $.Values.global.image.tag }}
      imagePullPolicy: Always
      {{- $testRun := . | default dict }}
      {{- if $testRun.command }}
      command:
      {{- range $testRun.command }}
      - {{ . }}
      {{- end }}
      {{- end }}
      {{- if $testRun.arguments }}
      args:
      {{- range $testRun.arguments }}
      - {{ . }}
      {{- end }}
      {{- end }}
      resources:
        requests:
          cpu: {{ dig "resources" "requests" "cpu" "100m" ($.Values | merge (dict)) }}
          memory: {{ dig "resources" "requests" "memory" "256Mi" ($.Values | merge (dict)) }}
          ephemeral-storage: {{ ($.Values.resources).requests.ephemeralStorage | default "64Mi" }}
        limits:
          memory: {{ dig "resources" "requests" "memory" "256Mi" ($.Values | merge (dict)) }}
          ephemeral-storage: {{ ($.Values.resources).requests.ephemeralStorage | default "64Mi" }}
      env:
        - name: ENV
          value: {{ $.Values.global.env }}
        - name: VERSION
          value: {{ $.Values.global.image.tag }}
        - name: DD_ENV
          value: {{ $.Values.global.env }}
        - name: DD_SERVICE
          value: {{ $.Release.Name }}
        - name: DD_VERSION
          value: {{ $.Values.global.image.tag }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        {{- if $.Values.commonEnv }}
        {{- toYaml $.Values.commonEnv | nindent 8 }}
        {{- end }}
        {{- if $testRun.env }}
        {{- toYaml $testRun.env | nindent 8 }}
        {{- end }}
      {{- if or ($.Values.commonEnvFrom) ($testRun.envFrom) }}
      envFrom:
        {{- if $.Values.commonEnvFrom }}
        {{- $.Values.commonEnvFrom | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 8 }}
        {{- end }}
        {{- if $testRun.envFrom }}
        {{- $testRun.envFrom | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 8 }}
        {{- end }}
        {{- range .Values.secrets }}
        {{- $secretHash := sha256sum .secret | substr 0 6 }}
        {{- $secretName := list $.Release.Name .name $secretHash | join "-" }}
        - secretRef:
            name: {{ $secretName }}
            optional: {{ .optional | default false }}
          {{- if .prefix }}
          prefix: {{ .prefix }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumeMounts:
        - name: tmp
          mountPath: /tmp
          readOnly: false
        - name: tmp
          mountPath: /tmp/workspace # explicitly add workspace dir for backwards compatibility
          subPath: workspace
          readOnly: false
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
  imagePullSecrets:
    - name: {{ $.Values.imagePullSecret | default "rt-docker-config" }}
  volumes:
    - name: tmp
      emptyDir: { }
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  restartPolicy: Never
---
{{- end }}
