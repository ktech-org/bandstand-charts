{{- $relName := include "bandstand-web-service.fullname" $ -}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ $relName }}-acceptance-tests
  labels:
    application: {{ $relName }}-acceptance-tests
    application-under-test: {{ $relName }}
    app.kubernetes.io/name: {{ include "bandstand-web-service.fullname" $ }}
    app.kubernetes.io/version: {{ .Values.global.image.tag }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    ktech.com/backstage-component: {{ .Values.global.releaseTags.backstageComponent }}
    ktech.com/backstage-owner: {{ .Values.global.releaseTags.backstageOwner }}
    {{- if .Values.global.releaseTags.backstageSystem }}
    ktech.com/backstage-system: {{ .Values.global.releaseTags.backstageSystem }}
    {{- end }}
    tags.datadoghq.com/service: {{ $relName }}-acceptance-tests
    tags.datadoghq.com/version: {{ .Values.global.image.tag }}
    tags.datadoghq.com/env: {{ .Values.global.env }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
    "polaris.fairwinds.com/readinessProbeMissing-exempt": "true"
    "polaris.fairwinds.com/livenessProbeMissing-exempt": "true"
    "linkerd.io/inject": disabled
    "karpenter.sh/do-not-disrupt": "true"
spec:
  {{- if (.Values.test).createServiceAccount }}
  serviceAccountName: {{ $relName }}-acceptance-tests
  {{- end }}
  containers:
    - name: {{ $relName }}-acceptance-tests
      image: {{ .Values.dockerRegistry | default .Values.global.dockerRegistry | default "ktechartifacts-docker.jfrog.io" }}/{{ ($.Values.test).imageName | default $.Values.imageName | default $relName }}-acceptance-tests:{{ .Values.global.image.tag }}
      imagePullPolicy: Always
      {{- $testContainer := .Values.testContainer | default dict }}
      {{- if $testContainer.command }}
      command: {{ $testContainer.command }}
      {{- end }}
      {{- if $testContainer.arguments }}
      args:
      {{- range $testContainer.arguments }}
      - {{ . }}
      {{- end }}
      {{- end }}
      resources:
        requests:
          cpu: 100m
          memory: {{ ((.Values.test).resources).requests.memory | default "512Mi" }}
          ephemeral-storage: {{ ((.Values.test).resources).requests.ephemeralStorage | default "64Mi" }}
        limits:
          memory: {{ ((.Values.test).resources).requests.memory | default "512Mi" }}
          ephemeral-storage: {{ ((.Values.test).resources).requests.ephemeralStorage | default "64Mi" }}
      env:
        - name: ENV
          value: {{ .Values.global.env }}
        {{- if (.Values.test).additionalEnvVars }}
          {{- tpl (.Values.test.additionalEnvVars | toYaml) $ | trimPrefix "|" | trimPrefix "\n" | nindent 8 }}
        {{- end }}
        {{- if (.Values.test).environmentEnvVars }}
          {{- tpl (.Values.test.environmentEnvVars | toYaml) $ | trimPrefix "|" | trimPrefix "\n" | nindent 8 }}
        {{- end }}
      {{- if or ((.Values.test).envFrom) ((.Values.test).secrets) }}
      envFrom:
      {{- if (.Values.test).envFrom }}
      {{- (.Values.test).envFrom | toYaml | trimPrefix "|" | trimPrefix "\n" | nindent 12 }}
      {{- end }}
      {{- range (.Values.test).secrets }}
      {{- $secretHash := sha256sum .secret | substr 0 6 }}
      {{- $secretName := list $.Release.Name $.Values.nameSuffix .name "acceptance-test" $secretHash | join "-" }}
      - secretRef:
          name: {{ $secretName }}
          optional: {{ .optional | default false }}
        {{- if .prefix }}
        prefix: {{ .prefix }}
        {{- end }}
      {{- end }}
      {{- end }}
      volumeMounts:
        - name: tmp
          mountPath: /tmp
          readOnly: false
        - name: tmp
          mountPath: /tmp/workspace # explicitly add workspace dir for backwards compatibility
          subPath: workspace
          readOnly: false
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
  imagePullSecrets:
    - name: {{ .Values.imagePullSecret | default "rt-docker-config" }}
  volumes:
    - name: tmp
      emptyDir: { }
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  restartPolicy: Never
